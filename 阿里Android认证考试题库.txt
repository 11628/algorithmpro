1.id资源及定义推荐驼峰命名法，View组件的资源id应以View的缩写作为前缀、某些特殊控件可以使用小写字母加下划线进行命名，以下id资源的命名规范
【正确】
（1）某个ImageView的id定义为：<ImageView id="@+id/ivUserAvatar"...>...</ImageView>
（2）某个ProgressBar的id定义为：<ProgressBar android:id="@+id/progress_bar_login">...</ProgressBar>
（3）某个Button的id定义为：<Button id="@+id/btnLogin">...</Button>
【错误】
（1）某个TextView的id定义为：<TextView id="@+id/userNamel"...>...</TextView>

2.某个直播业务模块名称为live，请问其Android工程中res目录下资源名符合规范的有
【正确】
（1）live_activity_main_.xml
（2）live_loading_icon.xml
【错误】
（1）popup_anim.xml
（2）navigation_menu.xml

3.定义某个style的以下行为符合规范
【正确】
（1）当希望在某个BaseTheme的基础上扩展定义某个Activity的theme时，定义的style如下：<stylename="BaseTheme.ThisActivityTheme">...</style>
【错误】
（1）可以任意给style资源命名
（2）live模块的style文件名称为：customstyle.xml
（3）所有的style都是独立的，不存在继承关系

4.以下color资源命名规范
【正确】
（1）<color name="live_reward_btn_bg">#33b5e5e5</color>
（2）<color name="live_reward_btn_bg">#00333333</color>
（3）<color name="live_reward_btn_bg">#b5e5e5</color>
【错误】
（1）<color name="loadingdialogbg">#33b5e5e5</color>
（2）<color name="live_reward_btn_bg">#333</color>

5.以下关于Intent中携带敏感信息的说法
【正确】
（1）不必要导出的组件设置android:export=false
（2）隐式Intent中尽量不要携带敏感信息，避免被外部恶意程序注册的BroadcastReceiver劫持Intent
（3）使用LocalBroadcasManager处理含敏感信息的广播，避免Intent拦截和恶意注入
（4）如果需要携带敏感信息。Intent需要使用显示方式。指明目标Component
【错误】
（1）Intent的数据内容不必关心。只要应用功能测试通过就可以


1.关于service启动，下列说法
【正确】
（1）没有特殊原因，总是使用显式Intent启动或绑定Service
（2）如果使用隐式Intent,推荐使用Intent#setPackage()方法设置Intent指定包名
【错误】
（1）Service都应该声明IntentFilter
（2）推荐使用隐式Intert启动Service

2.使用Intent方法启动Service时应该注意
【正确】
（1）调用setPackage()方法将Intent的解析结果限定在本应用内
（2）尽量使用显示Intent启动Service
（3）不必要外露的Service设置export=false
（4）Service组件避免定义Intent Filter

3.在Service中进行耗时操作
【正确】
（1）在IntentService的onHandleIntent()中可以执行耗时操作
【错误】
（1）在onStartCommand()中可以执行耗时操作
（2）在onBind()中可以执行耗时操作
（3）在onCreate()中可以执行耗时操作

4.以下关于BroadcastReceiver#onReceive()的说法
【正确】
（1）如果该方法耗时超过10s，则有可能会被系统回收
（2）可以通过android.content.Context#Receiver(BroadcastReceiver,IntentFilter,String,android.os.Handler)方法让onReceive方法在非MainThread执行
（3）该方法在Main Thread执行
【错误】
（1）该方法可执行IO操作

5.Activity间通过隐式Intent跳转时，需要注意的是
【正确】
（1）为了避免找不到相应的Activity造成应用异常，在发出intent之前，必须通过resolveActivity检查
（2）为了防止应用之间的影响，隐式Intent中Action定义尽量更详细一些
（3）调用系统功能例如拨打电话、发邮件等，需要遵守标准的URI格式
【错误】
（1）在隐式Intent跳转时，不需要进行resolveActivity检查，直接CatchException就可以了。

6.在应用内广播敏感信息时，下面说法
【正确】
（1）接受敏感信息的静态BroadcastReceiver如果没有特殊原因，尽量不要设置为export
（2）如果消息仅限于应用内，应该使用LocalBroadcastManager#sendBroadcast()发送敏感消息
【错误
（1）可以通过sendBroadcast()发送隐式广播在应用内传递敏感信息
（2）可以通过sendOrderedBroadcast()方法在应用内传递敏感信息

7.以下关于Activity#onPause()方法中可以进行操作的是
【正确】
（1）注销广播unregisterReceiver()
【错误】
（1）进行磁盘IO操作
（2）发送同步网络请求
（3）通过FragmentTransaction的方式添加Fragment

8.通过Intent在Android基础组件之间传递大数据可能导致
【正确】
（1）OOM
【错误】
（1）空指针异常
（2）ANR
（3）无异常

9.关于应用内广播做法
【正确】
（1）使用LocalBroadcastManager处理应用内广播
【错误】
（1）任何形式的广播都可以
（2）使用隐式Intent启动广播
（3）receiver组件定义属性android:exported=true

10.Activity#onSaveInstancestate()方法中，适合执行的操作有
【正确】
（1）保存UI控件属性
【错误】
（1）更新Sqllite
（2）文件写入
（3）更新SharedPreferences

11.以下关于android.app.Service的说法
【正确】
（1）Service#onStartCommand()是在MainThread执行的，因此不能执行耗时操作
（2）如果Service需要处理耗时操作IntentService实现
（3）如果Service需要处理耗时操作可以通过AsyncTask实现
【错误】
（1）Service#onStartCommand()方法中可以进行网络请求操作

12.以下关于Activity#onDestroy方法的描述
【正确】
（1）Activity子类重载该方法时，必须调用super.onDestory()
（2）应该在该方法注销之前注册的
【错误】
（1）在该方法中释放Activity相关线程资源
（2）可以在该方法中处理保存应用数据的相关逻辑

13.当应用开发过程中需要使用BroadcastReceiver进行广播处理的时候，以下操作
【正确】
（1）onReceive方法中对Intent数据做安全性校验，避免注入攻击
（2）尽量在Activity的inResume/onPuase方法中注册和注销广播
（3）使用LocalBroadcastManager处理应用内广播
【错误】
（1）registerReceiver()和unregisterReceiver()可以不配对使用

14.Activity间隐式Intent进行跳转时，建议先使用PackageManager#resolveActivity()判断是能够跳转成功，是为了避免以下哪种Runtime异常？
【正确】
（1）ActivityNotFoundException
【错误】
（1）SendIntentException
（2）NameNotFoundException
（3）SecurityException

15.关于组件间数据传递的说法
【正确】
（1）使用ContentProvider实现数据共享
（2）使用Intent传递数据
（3）使用SharedPreferences实现数据共享
【错误】
（1）使用Application缓存当前登录的用户信息

16.在BroadcastReceiver中进行耗时操作，下列说法
【正确】
（1）在onBind()方法中，可以通过调用IntentService去执行耗时操作
【错误】
（1）在onBind()方法中，可以通过创建ThreadPool执行耗时操作
（2）在onBind()方法中可以通过new Thread()执行耗时操作
（3）在onReceive()中可以执行耗时操作

17.以下关于Activity#onSaveInstanceState()方法说法正确的是( )?
【正确】
（1）重载该方法需要调用super.onSaveInstanceState()；
（2）可以在该方法中操作SharedPreferences进行一些持久化存储
【错误】
（1）该方法默认保存一些UI状态
（2）只要Acitivity退入后台，该方法就会被调用

18.IntentService每次可以处理多少个Intent（）？
【正确】
（1）1
【错误】
（1）3
（2）5
（3）不限

1.避免引发全局layout刷新
【正确】
（1）设置固定的View大小的宽高
（2）通过修改Canvas位置并且调用
（3）通过设置一个是否允许requestLayout的变量，然后重写控件的requestlayout、onSizeChanged方法，判断控件的大小没有改变的情况下，当进入requestLayout的时候，直接返回而不调用super的requestLayout方法
（4）调用View的layout方法修改位置

2.以下关于Activity页面布局的做法
【正确】
（1）尽量少使用ViewGroup嵌套
（2）减少LinearLayout的嵌套层级
（3）同样UI，使用RelativeLayout替代LinearLayout以减少view层级
【错误】
（1）只要实现UI功能，不必关心ViewHirerachy

3.关于ViewHolder的说法
【正确】
（1）getView中需要更新ViewHolder的所有属性
（2）ViewHolder不仅适用于ListView的场景
（3）使用ViewHolder主要是为了避免多次创建view，降低内存占用并提升UI流畅度。
【错误】
（1）ViewHolder仅设置需要更新的属性即可

4.在ListView中加载图片时，需要注意
【正确】
（1）为了UI效率，应该把展示过的图片都缓存起来
（2）做好内存控制，避免内存溢出
（3）做好缓存以及淘汰机制，避免重复创建
（4）当图片不可见后，应该立即释放，避免内存占用过高

5.关于嵌套Fragment的说法
【正确】
（1）使用嵌套Fragment时应注意区分Activity的FragmentManager和宿主Fragment的FragmentManager，否则可能导致错误。
（2）嵌套Fragment的onActivityResult方法可能不会被正常调用
（3）为了避免复杂性和潜在bug，尽量不要使用嵌套Fragment
【错误】
（1）可以在xml文件中定义嵌套Fragment

6.在Activity未初始化完成时，显示PopupWindow或者Dialog会导致如下哪种异常？
【正确】
（1）BadTokenException
【错误】
（1）InflateException
（2）UnsupportedOperationException
（3）lllegaStateException

7.当添加Fragment时，以下做法
【正确】
（1）避免使用FragmentTransaction#commitAllowingstateLoss()
（2）FragmentTransaction#commit()调用时机不对可能会导致java.lang.lllegalStateException
（3）使用FragmentTransaction#commitllowingstateLoss()会导致用户UI状态丢失，降低用户体验
【错误】
（1）在Activity#onSaveInstancestate()方法之后调用FragmentTranscation#commit()没有问题

8.在文本大小设置中，使用以下哪种单位会使显示的字体大小受系统设置里字体大小的影响？
【正确】
（1）sp
【错误】
（1）px
（2）dp
（3）pt

9.以下哪种可能会造成内存问题
【正确】
（1）Application对象中存储大量缓存数据
（2）使用AnimationDrawable加载大量图片
【错误】
（1）使用Adapter时，使用了ViewHolder做缓存
（2）在布局设计时，不能使用Scrollview包裹ListView/GridView/ExpandableListView

10.以下关于使用DialogFragment替换Dialog的说法正确的()
【正确】
（1）DialogFragment可以便利的使用自定义Dialog和系统Dialog
（2）系统 Dialog在屏幕旋转的时候可能会导致内存泄漏
（3）DialogFragment便于代码解耦和复用
（4）DialogFragment可以借助FragmentManager自动管理对话框状态，比如屏幕旋转后Dialog状态的恢复
【错误】
（1）由于系统Dialog是独立于Activity的系统，管理状态复杂，代码量比较多

11.为便于随Activity生命周期管理对话框/弹出浮层的生命周期，推荐使用以下哪种view?
【正确】
（1）DialogFragment
【错误】
（1）PopupWindow
（2）AlertDialog
（3）Dialog

12.关于局部频繁刷新View，如何避免全局重新布局的做法
【正确】
（1）需刷新的View严格指明宽高，比如倒计时组件
（2）使用View#invalidate(int l,int t,int r ,int b)
（3）调用View#layout()方法更新位置，比如弹幕
（4）在某些局部刷新的场景下，强制关闭自定义View#requestLayout功能

13.在( )等组件中使用图片时，应做好图片的缓存，避免始终持有图片导致内存泄露引起的性能问题。建议使用开源或者封装的图片库。
【正确】
（1）ListView
（2）ViewPager
（3）RecyclerView
（4）GirdView

1.Executors返回的线程池对象有哪些弊端
【正确】
（1）可能会堆积大量的请求，从而导致OOM
（2）可能会堆积大量的线程，从而导致OOM
【错误】
（1）线程调度慢
（2）内部有Bug，稳定性差

2.以下符合规范的操作
【正确】
（1）禁止在非UI主线程操作View
（2）使用dp作为View的小单位
（3）源文件统一采用UTF-8编码
【错误】
（1）为子View和父View设置同样背景色

3.ThreadPoolExecutor设置线程存活时间(setKeepAliveTime)的目的是
【正确】
（1）确保空闲时线程能被释放
【错误】
（1）没有效果
（2）延长线程存活时间
（3）设置的时间一到就回收线程

4.在主线程加载大图会导致
【正确】
（1）UI卡顿
【错误】
（1）图片错乱
（2）崩溃
（3）内存溢出

5.以下哪些操作可以在主线程执行
【正确】
（1）更新界面
【错误】
（1）网络操作
（2）IO操作
（3）耗时逻辑

6.多进程模型的APP，应该注意
【正确】
（1）在Application的业务初始化代码中加入进程判断，确保只在自己需要的进程初始化。特别是后台进程减少不必要的业务初始化
（2）禁止在多进程之间用SharedPreferences共享数据，虽然可以（MODE_MULTI_PROCESS）,但官方已不推荐
【错误】
（1）多进程容易导致内存不足
（2）多进程Crash率会升高

7.在Activity进行较大数据量的通信时，以下选项中建议使用的有
【正确】
（1）EventBus
（2）文件
【错误】
（1）Intent+Serializable
（2）Intent+Parcelable

8.Android APP在HTTPS通信中，验证策略需要改成()模式
【正确】
（1）SSLSocketFactory.STRICT_HOSTNAME_VERIFIER
【错误】
（1）SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
（2）SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER

9.使用线程池的好处有（ ）
【正确】
（1）减少创建和销毁线程上所花的时间
（2）解决系统资源不足的问题
【错误】
（1）避免线程过度切换问题
（2）减少匿名线程，便于后续做线程分析

1.以下关于文件与数据库说法
【正确】
（1）当使用外部存储时，必须检查外部存储的可用性。
（2）任何时候不要硬编码文件路径，请使用Android文件系统API访问。
（3）多线程操作写入数据库时，需要使用事务，以免出现同步问题。
（4）数据库Cursor必须确保使用完后关闭，以免内存泄露。

2.执行SQL语句时，应使用（），以免SQL注入风险
【正确】
（1）SQLiteDatabase#delete()
（2）SQLiteDatabase#insert()
（3）SQLiteDatabase#update()
【错误】
（1）SQLiteDatabase#execSQL()

1.加载Bitmap图片时，inBitmap选项有什么作用？
【正确】
（1）重复利用内存空间
【错误】
（1）图片压缩
（2）限制清晰度
（3）设置位图信息

2.减小图片占用内存的方法
【正确】
（1）本地png图片预先用TinyPNG压缩
（2）使用inBitmap重复利用内存空间
（3）用RGB_565代替RGB_888
（4）根据实际需要对图片进行缩放

3.关于动画，下列说法
【正确】
（1）在动画结束的回调中，应该判断需要用到的资源是否已经被释放了
（2）应该根据设备情况选择性开启复杂动画。
（3）Activity不可见时，应该及时关闭动画。
【错误】
（1）Animation.AnimationListener#onAnimationEnd()回调可以准确可靠地告知动画结束时机。

4.APK中的png图片，应该怎么处理
【正确】
（1）图片用TinyPNG压缩，以减小包大小
【错误】
（1）尽可能使用原图，避免图片失真
（2）尽可能使用高清大图
（3）为了符合Goole的规范，将同一张图片分别放到drawable-hdpi、drawable-xhdpi、drawable-xxhdpi等目录下

5.以下关于定义一个drawable文件的说法
【正确】
（1）为不同屏幕密度的设备都提供一组drawable
（2）为了精简apk整包大小，在满足需求并且了解清楚用户设备分布的情况的前提下，只支持几种屏幕密度的drawable、比如仅定义xhdpi中的drawable文件
（3）在xhdpi目录下定义live_reward_btn_pressed.png
【错误】
（1）所有drawable文件都放在drawable目录，不区分屏幕密度
（2）在xxxhdpi目录下放置不满足设备屏幕密度的小图

6.使用（ ）代替RGB_888，在不怎么降低视觉效果的前提下，减少内存占用
【正确】
（1）RGB_565
【错误】
（1）ARGB_8888
（2）ALPHA_8
（3）ARGB_4444

7.不建议使用AnimationDrawable的原因是
【正确】
（1）内存消耗过大
【错误】
（1）动画不流畅
（2）不兼容问题

8.关于RGB_565和RGB_888，以下说法
【正确】
（1）若视觉效果相似，应尽可能使用RGB_565
（2）RGB_888比RGB_565清晰
（3）RGB_565占用内存更少
【错误】
（1）RGB_555比RGB_888清晰

9.使用gif要注册什么
【正确】
（1）gif内存占用更大，需要注意控制内存
（2）需要注意单个gif的大小
（3）注意控制单个页面同时播放的gif个数
【错误】
（1）和普通图片一样，没有太多特殊

10.关于监听动画结束事件，以下做法
【正确】
（1）使用Handler.postDelay()来实现
（2）使用Animation.AnimationListener#onAnimationEnd()并加超时机制
【错误】
（1）直接使用Animation.AnimationListener#onAnimationEnd()回调
（20使用Animation.AnimationListener#onAnimationStart()回调

1.以下说法
【正确】
（1）不要广播敏感信息，只能在本应用使用LocalBroadcast，避免被别的应用收到，或者setPackage做限制
（2）不要把敏感信息打印到log中
（3）数据存储在Sqlite或者轻量级存储需要对数据进行加密，取出来的时候进行解密
（4）应用发布前确保android:debuggable属性设置为false
（5）当使用外部存储时，必须检查外部存储的可用性
（6）子线程中不能更新界面。更新界面必须在主线程中进行，网络操作不能再主线程中调用
（7）本地加密密钥不能硬编码在代码中，更不能使用SharedPreferences等本地持久化机制存储。应选择Android自身的秘钥库（KeyStore）机制或者其他安全性更高的安全解决方案保存
（8）应用程序在加解密时，使用硬编码在程序中的秘钥。攻击者通过反编译拿到秘钥可以轻易破解APP通信数据。
（9）不要使用loopback来通信敏感信息
（10）Android5.0以后安全性要求较高的应用应该使用window.setFlag(LayoutParam.FLAG_SECURE)禁止录屏
（11）密钥加密存储或者经过变形处理后用于加密解密运算，切勿硬编码到代码中。
（12）Webview应设置
WebView#getSetting()#setAllowFileAccess(false)、
WebView#getSettings()#setAllowFileAccessFromFileURLs(false)、WebView#getSetting()#setAllowUniversalAccessFromFileURLs(false)，
阻止fileschemeURL的访问
（13）源文件推荐统一采用UTF-8的形式进行编码
（14）灵活使用布局，推荐merge、ViewStub来优化布局，尽可能多的减少UI布局层级
（15）不能在Activity没有完全显示时显示PopupWindow和Dialog
（16）为解决连续显示Toast时不能取消上一次Toast消息的情况，使用一个全局的Toast对象
（17）为共享数据，可使用Intent进行数据传输
【错误】
（1）可多次为子View和父View设置同样背景
（2）使用TextView，编写倒计时组件时，使用wrap_content设置文本大小解决适配问题
（3）为避免主线卡顿，在非UI线程给ImageView设置背景图片

2.Android5.0以后安全性要求较高的应用应该使用( )禁止录屏
【正确】
（1）window#setFlag(LayoutParam.FLAG_SECURE)
【错误】
（1）window#setFlag(LayoutParam.FlAG_SPLIT_TOUCH)
（2）window#setFlag(LayoutParam.FlAG_BLUR_BEHIND)
（3）window#setFlag(LayoutParam.FlAG_KEEP_SCREEN_ON)

3.将( )属性设置为false，防止adbbackup导出数据
【正确】
（1）android:allowBackup
【错误】
（1）android:permission
（2）android:theme
（3）android:debuggable

4.禁止使用常量初始化矢量参数构建lvParameterSpec，建议IV通过（ ）产生
【正确】
（1）随机方式
【错误】
（1）常量初如化
（2）函数定义
（3）写死变量

5.加密算法：使用不安全的Hash算法加密信息，存在被破解的风险，建议使用（ )等安全性更高的Hash算法
【正确】
（1）SHA-256
【错误】
（1）SHA-128
（2）SHA-1
（3）MD5