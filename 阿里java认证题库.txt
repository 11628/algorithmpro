=================（一）命名风格==================
关于Java的接口描述，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】多选 
  A .在接口类中的方法和属性使用public修饰符。
  B .对于Service类，内部的实现类加Impl的后缀与接口区别。例如：ProductServiceImpl实现ProductService接口。
  C .对于Service类，基于SOA的理念，是以接口方式暴露服务。
  D .尽量不在接口里定义变量，如果一定要定义变量，肯定是与接口方法相关，而且是整个应用的基础常量。

关于类命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选 
  A .抽象类命名使用Abstract或Base开头。
  B .异常类命名使用Exception结尾。
  C .测试类命名以它要测试的类的名称开始，以Test结尾。
  D .如果使用到了设计模式，建议在类名中体现出具体模式。例如代理模式的类命名：LoginProxy；观察者模式命名：ResourceObserver。

关于变量、方法名包的命名下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选 
  A .POJO类中的任何布尔类型的变量，都不要加is，因为部分框架解析时有可能会出现序列化错误。
  B .包名统一使用单数形式，如：com.alibaba.mpp.util。
  C .中括号是数组类型的一部分，数组定义如下：String[] args; 不要误写为String args[]；
  D .Service/DAO层方法命名可以参考规约，例如：删除的方法推荐使用remove或delete做前缀。

关于类和方法的命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选
A.类名使用UpperCamelCase命名法，但是领域模型命名除外，如：ProductDO的命名是规范的。
B.方法名命名应该使用lowerCamelCase命名法，如方法名：getHttpMessage()是符合命名规范的。
C.为了方便理解，方法名域参数名可以使用拼音与英文混合的方式。
D.所有编程相关的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。

以下关于命名规约内容说明，正确的是：【BCD】多选
A .【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词，并且使用复数形式，例如：应用工具类包名为com.alibaba.mpp.utils
B .【强制】类名使用UpperCamelCase，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / DTO / VO / DAO等。
C .【强制】抽象类命名使用Abstract或Base开头；异常类命名使用Exception结尾；测试类命名以它要测试的类的名称开始，以Test结尾。
D .【强制】枚举类名建议带上Enum后缀，枚举成员名称需要全大写，单词间用下划线隔开。
 
 下面的例子代码和描述，哪些是不正确的：【AD】多选
A. 单行字符数限制不超过140个，超出需求换行
B. IDE的text file encoding设置为GBK；IDE中文件的换行符使用Unix格式，不要使用windows格式。
C. 大括号与if,else,for,do,while语句一起使用，即使只有一条语句（或是空），也应该把大括号写上。
D. 大括号的使用约定。如果是大括号内为空，则简洁地写成{}即可，不需要换行；
=================（二）常量定义==================

关于枚举类型,以下描述符合规范的是：【BC】多选
A.只要是常量,就使用校举值.
B.如果变量值在一个范围内变化,而且还带有名称之外的延伸属性,必须使用Enum类,如: publc enum MonthEnm( JANUARY(1),FEBRARY(2),MCAC （I） 3， APA14DDEME 12）
C.枚举名命名建议带上Enum,枚举成员名称需要全大写,单词用"_"分割。
D.定义星期一至星期日这种范围固定的信息,不推荐使用校举类型。
文档：【推荐】如果变量值仅在一个范围内变化用 Enum 类。如果还带有名称之外的延伸属性，必须 
使用 Enum 类，下面正例中的数字就是延伸信息，表示星期几。 
正例：public Enum{ MONDAY(1), TUESDAY(2), WEDNESDAY(3), THURSDAY(4), FRIDAY(5), 
SATURDAY(6), SUNDAY(7);}

关于常量定义，下列哪些说法符合《阿里巴巴Java开发手册》：【AC】多选 
  A .不允许出现任何魔法值（即未经预先定义的常量）直接出现在代码中。
  B .魔法值是指程序中随意定义并赋值的变量值，如果代码编写者明白变量值意义是可以任意使用的，例如在代码中写if(status == 3) return error;符合规范。
  C .如果变量值仅在一个范围内变化推荐用Enum类。
  D .在程序中，一律禁止使用枚举类型。

关于变量和常量定义，下列哪些符合《阿里巴巴Java开发手册》：【AD】多选 
  A .Long a=2L；//大写的L
  B .Long a=2l; //小写的l
  C .常量只定义一次，不再赋值，所以不需要命名规范。
  D .不要使用一个常量类维护所有常量，应该按常量功能进行归类，分开维护。

关于常量定义，下列哪些说法符合《阿里巴巴Java开发手册》【BD】多选
A.像"yes","no","success","Y","N",这些简单的词，可以直接在代码中使用，不必定义成常量形式。
B.即使是"yes","no","success","Y","N",看似简单的词，也必须定义成常量形式。
C.不要在一个常量类中，维护本应用所有常量，按常量功能进行归类。
D.大而全的常量类，可以通过文本搜索（文本查找）功能定位到修改的常量，没有增加理解和维护代价。

关于常量定义，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选
A.跨应用共享常量：放置在二方库中，通常是client.jar中的const目录下。
B.应用内共享常量：通常放置在一方库的子模块中的const目录下。
C.子工程内部共享常量：即在当前子工程的const目录下。
D.类内常量：直接在类内部privates static final定义。

关于常量的命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选
A .常量命名应该全部大写，单词间用下划线隔开。
B .常量的定义要力求语义表达完整清楚，让别人能从常量名称上大致了解含义，例如：MAX_STOCK_COUNT。
C .常量命名，可以使用拼音与英文的混合方式。
D .在使用缩写时要注意：杜绝不规范的缩写。 

=================（三）代码格式==================
关于代码书写格式,下列哪些说法符合《阿里巴巴Java开发手册》：BCD
A.换行时相对上一行缩进2个空格。
B.运算符与下文一起换行,方法调用的点符号与下文一起换行。
C.在多个参数超长,逗号后进行换行。
D在括号前不要换行。

文档：【强制】单行字符数限制不超过 120 个，超出需要换行，换行时，遵循如下原则： 
1） 换行时相对上一行缩进 4 个空格。 
2） 运算符与下文一起换行。 
3） 方法调用的点符号与下文一起换行。 
4） 在多个参数超长，逗号后进行换行。 
5） 在括号前不要换行，见反例。 

关于文件编码和格式的设定，下列哪些说法符合《阿里巴巴Java开发手册》：【BC】多选 
  A .IDE的text file encoding设置为GBK格式。
  B .IDE的text file encoding设置为UTF-8格式。
  C .IDE中文件的换行符使用unix格式。
  D .IDE中文件的换行符使用windows格式。

以下关于格式规约的说法，正确的有哪些：【AD】多选 
  A .代码块缩进4个空格，如果使用tab缩进，请设置成1个tab为4个空格；
  B .代码块缩进5个空格，如果使用tab缩进，请设置成1个tab为5个空格。
  C .为了保持代码美观，《手册》强烈推荐增加若干空格，使某一行的变量与相邻对应位置的变量对齐。
  D .方法体内的执行语句组、变量的定义语句组、不同的业务逻辑之间或者不同的语义之间推荐插入一个空行；相同业务逻辑和语义之间不需要插入空行。

以下关于格式规约的说法，正确的有哪些：【ABD】多选
A.左括号和后一个字符之间不出现空格；同样，右括号和前一个字符之间不出现空格，例如：if(flag == 1){System.out.println("world");}
B.If/for/while/switch/do等保留字与左右括号之间都必须加空格；
C.while这个保留字比较特殊，使用时左右括号之间可以不用加空格，例如：while(true){...}
D.任何运算符左右必须加一个空格，运算符包括赋值运算符=、逻辑运算符&&、加减乘除符号、三目运行符等。

=================（四）OOP规约==================
关于类的序列化，下列说法哪些是正确的：【D】单选
  A .类的序列化与serialVersionUID毫无关系。
  B .如果完全不兼容升级，不需要修改serialVersionUID值。
  C .POJO类的serialVersionUID不一致会编译出错。
  D .POJO类的serialVersionUID不一致会抛出序列化运行时异常。

关于类和方法,下列哪些符合《阿里巴巴Java开发手册》:  ABC
A.任何类、方法、严控访问范围。因为过宽泛的访问范围,不利于模块解耦。
B.对外暴露的接口签名,原则上不允许修改,宁可新增,避免对依赖端产生影响。
C.如果新增一个功能完全相同的新接口,过时接口必须加@deprecated注释。
D. 所有过时的类与方法不得使用。
根据：文档的：对外暴露的接口签名， 原则上不允许修改方法签名，避免对接口调用方产生影响。接口过时必须加@Deprecated 注解，并清晰地说明采用的新接口或者新服务是什么。

关于基本数据类型与包装数据类型的使用标准，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .所有的POJO类属性必须使用包装数据类型。
  B .RPC方法的返回值和参数必须使用包装数据类型。
  C .因为JAVA的自动装箱与拆箱机制，不需要根据场景来区分数据类型。//容易选错
  D .所有的局部变量推荐使用基本数据类型。

在定义DO/DTO/VO/等POJO类时，对属性默认值的设定，下列哪些说法符合《阿里巴巴Java开发手册》：【D】单选 
  A .String类型的默认值设定为空字符串。
  B .Date类型的默认值设定为new Date()。
  C .集合类型的默认值设定为Collections.EMPTY_LIST。
  D .不要设定任何属性默认值。

关于Java的方法使用，下列哪些说法符合《阿里巴巴Java开发手册》：【AD】多选
A.Ojbect的equals方法容易抛空指针，使用常量或确定有值的对象来调用equals方法
B.所有的相同类型的包装类对象之间值的比较，全部使用equals方法比较。//原问题是指所有整型包装类
C.DO/VO等领域模型类不需要覆写Ojbect#toString()方法，没啥用处。
D.慎用Ojbect#clone()方法来拷贝对象。

关于Integer值的比较，下列哪些说法是正确的：【AD】多选
A.Integer a = 3 ; Integer b = 3;那么条件表达式（a == b)返回的结果是 true。
B.Integer a = 3 ;Integer b = 3;那么条件表达式（a == b )返回的结果是false。
C.Integer a = 273;Integer b = 273;那么条件表达式（a == b) 返回的结果是true。
D.Integer a = 273;Integer b = 273;那么条件表达式  (a == b)返回的结果是false。

关于Java代码的设计和开发注意事项，下列哪些说法符合《阿里巴巴Java开发手册》：【ABC】多选
A .所有的覆写方法，必须是强制加 @Override。
B .setter方法中，参数名称与类成员变量名称一致，this.成员名=参数名。
C .在getter方法中，尽量不要增加逻辑判断，因为添加了逻辑判断后，会增加排查问题难度。
D .避免用BeanUtil进行属性的copy。

关于构造方法，下列哪些说法符合《阿里巴巴Java开发手册》：【ABC】多选
A. 构造方法里面禁止加入任何业务逻辑，如果有初始化逻辑，请放在init方法中。
B. 当一个类有多个构造方法，应该按顺序放置在一起，便于阅读。
C. 如果不允许外部直接通过new来创建对象，那么构造方法必须是private。
D. 构造方法中可以有业务实现代码，如果成员变量的简单运算、业务判断等。

=================（五）集合处理==================
sort表示元素在存入集合时进行了排序,数据遍历的结果是按某个排序规则输出的;而order表示每次遍历的序列都是一样的,元素前后关系每次遍历都是确定的,那么下列哪些集合既是sort,又是order的：【D】单选
A、HashSet
B、LinkedList
C、HashMap
D、TreeMap

集合在遍历过程中，有时需要对符合一定条件的元素进行删除，下列哪些说法是正确的：【B】单选 
  A .在 foreach 循环里进行元素的 remove操作。
  B .使用Iterator方式，如果有并发，需要对Iterator对象加锁。
  C .Iterator进行元素的删除操作，绝对是线程安全的。
  D .Java无法实现在遍历时，进行删除元素操作。

关于Map类型集合的遍历方式，下列哪些说法是正确的：【D】单选 
  A .Map类型的实现类都同时实现了Iterator接口。
  B .使用foreach进行遍历。
  C .推荐使用keySet进行遍历。
  D .推荐使用entrySet进行遍历。

Hashtable，HashMap, ConcurrentHashMap都是Map的实现类，它们在处理null值的存储上有细微的区别，下列哪些说法是正确的：【ABD】多选 
  A .Hashtable的KV都不可以为null。
  B .HashMap的KV都可以为null。
  C .HashMap的K不可以为null，V可以为null。
  D .ConcurrentHashMap的KV都不可以为null。

数组使用Arrays.asList转化为集合，下列说法哪些正确的：【ACD】多选 
  A .数组元素的修改，会影响到转化过来的集合。
  B .数组元素的修改，不会影响到转化过来的集合。
C.对于转换过来的集合，它的 add/remove/clear 方法会抛出: 
UnsupportedOperationException。
  D .Arrays.asList 体现的是适配器模式，只是转换接口，后台的数据仍是数组。

通过集合A.subList()获取子集合B，下列说法哪些是正确的：【ABD】多选 
  A .返回的集合B没有实现Serializable接口，不能被序列化，所以不能应用于RPC场景。
  B .在B集合中添加某个元素，那么A集合也会添加进去此元素。
  C .集合A中元素的修改不会影响到集合B的任何操作。
  D .对A元素个数的修改，会导致集合B的遍历产生ConcurrentModificationException 异常。

KV结构的集合，在处理null值的存储上有细微的区别，下列哪些说法是正确的：【A】单选 
  A .TreeMap的key不可以为null
  B .TreeMap的key可以为null
  C .ConcurrentHashMap的key可以为null
  D .ConcurrentHashMap的value可以为null

关于hashcode和equals，下列哪些说法是正确的：【BC】多选
A. hashcode是Class的方法，equals是Objcet的方法
B. hashcode决定（如：hashMap）存储位置；equals决定是否需要覆盖（同一hash下）集合元素。
C. 类重写hashcode，必须重写equals。
D. 两者是否需要重写，没有必然联系。

list子类使用toarray方法实现集合向数组转换，下列哪些说法是正确的：【B】单选
A. Vector无法使用toArray转换成数组。
B. 优先推荐：调用集合类的方法toArray(T[] a),传入的是类型完全一样的数组，大小就是集合的size()。
C. 集合的修改，会影响到数组元素的改变。
D. 数组的修改，会影响到集合元素的改变。

=================（六）并发处理==================
关于并发处理，下列哪些说法符合《阿里巴巴Java开发手册》：【ABC】多选
  A .线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。
  B .同步处理时，能锁部分代码区块的情况下不要锁整个方法；高并发时，同步调用应该考虑到性能损耗。
  C .创建线程或线程池时，推荐给线程指定一个有意义的名称，方便出错时回溯。
  D .推荐使用Executors.newFixedThreadPool(int x)生成指定大小的线程池。(线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式)

关于线程安全，下列哪些说法是正确的：【ACD】多选 
  A .SimpleDateFormat 是线程不安全的类。
  B .SimpleDateFormat 是线程安全的类。
  C .一般不要定义SimpleDateFormat的static变量，如果定义为static，必须保证线程安全。
  D .推荐使用Apache封装好的DateUtils和DateFormatUtils工具类，来处理时间日期转换问题。

关于【多线程并行处理定时任务】的情况，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】
  A .推荐使用Timer方式处理。
  B .推荐使用ScheduledExecutorService方式处理。
  C .Timer运行多个TimeTask时，只要其中之一没有捕获抛出的异常，其它任务便会自动终止运行。
  D .ScheduledExecutorService并发运行多个定时任务时，其中某线程抛出异常，不会影响到其它线程的继续运行。//好好理解

关于线程池的创建，下列哪些说法符合《阿里巴巴Java开发手册》【ABC】多选
A. 线程池不允许使用Executors去创建，而是通过ThreadPoolExecutor的方式
B. new FixedThreadPool和new SingleThreadPool的主要问题是堆积的请求处理队列可能会耗费非常大的内存，甚至OOM。
C. new CachedThreadPool和new ScheduledThreadPool的主要问题是线程数量最大数是Integer.MAX_VALUE,可能会创建数量非常多的线程，甚至OOM。
D. 我们的机器运算速度够快，所以线程池的创建并不需要特别的约定。

关于线程池管理线程的好处，下列哪些说法是正确的：【AC】多选
A.能够减少在创建和销毁线程上所花的时间以及系统资源的开销。
B.使用线程池一定能避免OOM问题。
C.线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。
D.线程池能够根据资源等待情况，自动调整线程优先级并解决死锁问题。

关于加锁，下列哪些说法符合《阿里巴巴Java开发手册》：ABCD
A .可以只锁代码区块的情况下，就不要锁整个方法体。
B .高并发的业务场景下，要考虑加锁及同步处理带来的性能损耗，能用无锁数据结构，就不要用锁。
C .能用对象锁的情况下，就不要用类锁。
D .加锁时需要保持一致的加锁顺序，否则可能会造成死锁。 

在多线程并发读写的情况下，下列哪些处理方式能保证对象的线程安全：BCD
A .使用volatile关键字。(volatile 解决多线程内存不可见问题。对于一写多读，是可以解决变量同步问题，
但是如果多写，同样无法解决线程安全问题。)
B .使用synchronized关键字给对象的读写操作加锁。
C .如果是基本类型，推荐使用java.util.concurrent.atomic包下面提供的线程安全的基本类型包装类，例如AtomicInteger。
D .如果是集合，推荐使用java.util.concurrent提供的并发集合类，例如：ConcurrentHashMap。

使用CountDownLatch进行异步转同步操作时，下列哪些说法是正确的：【AB】多选
A. 每个线程退出前必须调用countDown()方法。
B. 线程执行代码注意catch异常，确保countDown()方法可以被执行。
C. 子线程抛出异常堆栈，直接就可以在主线程catch到。
D. 主线程必须 在启动其他线程后调用await()方法，这样主线程的操作就会在这个方法上阻塞，直到其他线程完成各自的任务。

=================（七）控制语句==================
关于参数校验,下列哪些说法符合《阿里巴巴Java开发手册》：ABCD
A.批量处理接口必须做好接口入参保护
B.需要极高稳定性和可用性的方法需要对参数进行校验
C.底层的方法,在上层调用中参数多半已经被校验过,可以考虑不校验。
D.对外提供的开放接口,都要进行参数检验。
文档：【推荐】接口入参保护，这种场景常见的是用于做批量操作的接口。 
【参考】方法中需要进行参数校验的场景： 
1） 调用频次低的方法。 
2） 执行时间开销很大的方法，参数校验时间几乎可以忽略不计，但如果因为参数错误导致中间执行回退，或者错误，那得不偿失。 
3） 需要极高稳定性和可用性的方法。 
4） 对外提供的开放接口，不管是 RPC/API/HTTP 接口。 
【参考】方法中不需要参数校验的场景： 
1） 极有可能被循环调用的方法，不建议对参数进行校验。但在方法说明里必须注明外部参数检查。 
2） 底层的方法调用频度都比较高，一般不校验。毕竟是像纯净水过滤的最后一道，参数错误不太可能到底层才会暴露问题。一般 DAO 层与 Service 层都在同一个应用中，部署在同一台服务器中，所以 DAO 的参数校验，可以省略。 
3） 被声明成 private 只会被自己代码所调用的方法，如果能够确定调用方法的代码传入参数已经做过检查或者肯定不会有问题，此时可以不校验参数。 

关于控制语句，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .推荐 if-else的方式可以改写成卫语句的形式。
  B .尽量减少try-catch 块内的逻辑，定义对象、变量、获取数据库连接等操作可以移到try-catch块外处理
  C .if ( condition) statements; 单行语句不需要使用大括号。
  D .在一个switch块内，都必须包含一个default语句并且放在最后，即使它什么代码也没有。

=================（八）注释规约==================
关于代码注释，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .特殊注释标记，请注明标记人与标记时间。
  B .待办事宜（TODO）:（ [标记人，标记时间，[预计处理时间]）
  C .在注释中用FIXME标记某代码虽然实现了功能，但是实现的方法有待商榷，希望将来能改进。 // XXX
  D .在注释中用FIXME标记某代码是错误的，而且不能工作，需要及时纠正的情况
提示：FIXME可以看成fix me修理我，有错误才处理，对吧！
      TODO：代做如果代码中有该注释，说明在该注释处有功能代码待编写，待实现的功能在说明中会简略说明。
![image.png](https://upload-images.jianshu.io/upload_images/11217637-4d4aeab306ea8e4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

关于代码注释，下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选 
  A .所有的抽象方法（包括接口中的方法）必须要用javadoc注释。
  B .所有的方法，包括私有方法，最好都增加注释，有总比没有强。
  C .过多过滥的注释，代码的逻辑一旦修改，修改注释是相当大的负担。
  D .我的命名和代码结构非常好，可以减少注释的内容。

关于注释，下列哪些说法符合《阿里巴巴Java开发手册》：【BC】多选
A .方法头定义签名上的注释可以使用//（双划线）简单说明，不必要遵守javadoc规范。（/** */）
B .类定义开始部分，一般都用Javadoc注释 程序的总体描述以及作者信息。
C .方法头定义签名上的注释必须遵守javadoc规范，使用/**回车来生成，不得在方法定义上方使用//（双划线）简单说明。
D .方法头定义签名上的注释，可以使用// xxx 的形式

关于注释，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选
A. 方法内部单行注释，在被注释语句上方另起一行，使用//注释。
B. 所有的类都必须添加创建者信息。
C. 相比较使用“半吊子”英文来注释，用中文注释把问题说清楚更合适。
D. 所有的枚举型字段必须要有注释，说明每个数据项的用途。

=================（九）其它==================
 下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选
  A .对于“明确停止使用的代码和配置”，如方法、变量、类、配置文件、动态配置属性等要坚决从程序中清理出去，避免造成过多垃圾。
  B .永久弃用的代码段注释掉即可，即不用加任何注释。
  C .对于暂时被注释掉，后续可能恢复使用的代码片断，在注释代码上方，统一规定使用三 个斜杠(///)来说明注释掉代码的理由。
  D .不要在视图模板中加入任何复杂的逻辑。

下列哪些说法符合《阿里巴巴Java开发手册》【ABCD】多选
A.在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。
B.在JDK8中，针对统计时间等场景，推荐使用Instant类。
C.尽量不要在vm中加入变量声明、逻辑运算符，更不要在vm模板中加入任何复杂的逻辑。
D.后台输送给页面的变量必须加$!{var}——中间的感叹号。

=================（一）异常处理==================
关于接口使用抛异常还是返回错误码，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选
  A .向公司外部提供的http/api接口，推荐使用“错误码”方式返回异常或者错误信息。
  B .对于应用内部的方法调用，推荐使用“抛出异常”的方式处理异常或者错误信息。
  C .跨应用的RPC调用，推荐使用将“错误码”和“错误简短信息”封装成Result的方式进行返回。
  D .对外提供的接口，一定要保证逻辑健壮性：尽量避免空指针等技术类异常；对于业务类异常要做好错误码或者异常信息的封装。 //这一项容易选掉

关于异常处理的注意事项,下列哪些说法符合《阿里巴巴Java开发手册》:  【AB】多选
A、事务场景中,抛出异常核catch后,如果需要回滚,一定要手动回滚事务。
B、在finally对文件流进行关闭。
C、推荐在finally使用return语句。
D、在try块内,可以不用对可能为null的对象做非空判断,因为如果抛掷NPE,会被catch块捕获井处理
文档：【强制】不要捕获 Java 类库中定义的继承自 RuntimeException 的运行时异常类，如： 
IndexOutOfBoundsException / NullPointerException，这类异常由程序员预检查来规避，保证程序健壮性。 

关于checked/unchecked exception，下列哪些说法是正确的：【BCD】多选 
  A .继承java.lang.Error的类属于checked exception。
  B .checked异常继承java.lang.Exception类。
  C .unchecked异常继承java.lang.RuntimeException类。
  D .NullPointerException , IllegalArgumentException属于unchecked exception。

关于异常的处理方式，下列哪些说法是正确的：【BD】多选 
  A .为防止obj对象本身空指针异常，书写代码时应该注意加异常捕获处理，例如：try { obj.method() } catch(NullPointerException e){……} 。
  B .方法签名中，抛给调用者的关键字为throws
  C .方法内部，抛出异常实例对象为throws
  D .自定义异常要做到“认知对等”，即：抛出者和接收者要保持对自定义异常的认知统一，接收方需要知道这种异常的含义和对应的处理方案。

关于捕获异常和抛异常，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】多选 
  A .如果需要捕获不同类型异常，为了方便处理，可以使用catch(Exception e){...}。
  B .不要捕获异常后不处理，丢弃异常信息。
  C .捕获异常与抛异常，必须是完全匹配，或者捕获异常是抛异常的父类。
  D .异常定义时区分unchecked / checked 异常，避免直接使用RuntimeException抛出。

关于Java代码的设计和开发注意事项下列哪些说法符合《集合开发规约》：【ABCD】多选
  A .禁止将URL、文件名、系统参数、数据库连接地址、业务规则的可变参数，硬编码在工程中。
  B .long或者Long初始赋值时，必须是大写的L，不能小写。
  C .当一个类有多个构造方法，或是多个同名方法，这些方法应该按顺序放置在一起，便于阅读。
  D .相同参数类型，同等业务含义，才可以使用Java的可变参数，参数的类型尽量避免使用Object。// 避免强制转换引起RuntimeException的ClassCastException

关于方法的返回值是否可以为null，下列哪些说法符合《阿里巴巴Java开发手册》：【BC】多选
A. 方法的返回值可以为null，如果是集合，必须返回空集合。
B. 方法的返回值可以为null，不强制返回空集合，或者空对象等。
C. 方法实现者必须添加注释，充分说明什么情况下会返回null值。
D. 防止NPE是调用者的责任。

关于异常处理，下列哪些说法是正确的：(ABCD)
A.try块放到了事务代码中，catch异常后，如果需要回滚事务，必须手动回滚事务
B.在finally块必须对文件秀进行关闭
C.不能在finally使用return，fanally块中的return返回方法结束执行，不会再执行 try 块中的 return 语句
D.循坏体中避免不必要的try-catch操作

防止NPE，是程序员的基本修养，对于可能产生NPE的场景，下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选
A. 数据库的查询结果可能为null
B. 集合只需要判断isNotEmpty,对取出的数据元素不需要判断是否为null。
C. 远程调用返回对象，一律要求进行NPE判断
D. 对于Session中获取的数据，建议NPE检查，避免空指针。

关于try-catch的使用方式，下列哪些说法是正确的：BD
A .推荐用try-catch来做流程控制、条件控制。
B .捕获异常与抛异常，必须是完全匹配，或者捕获异常是抛异常的父类。
C .对大段代码进行try-catch，利用Throwable来捕捉，万无一失。
D .对大段代码进行try-catch，这是不负责任的表现，分清稳定代码和非稳定代码，对非稳定的代码做对应的异常处理。

=================（二）日志规约==================

关于日志的条件输出和占位符的方式,下列哪些说法是正确的:  AD
A. 对trace/debug/info级别的日志输出,必须使用条件输出形式或者使用占位符的方式
B.条件输出方式可以避免log参数中字符串拼接的开销。
C.占位符输出格式可以和条件输出一样避免参数中字符串拼接开销。
D.因为设置了日志输出级别,所以无需使用条件输出方式。
文档：【强制】对 trace/debug/info 级别的日志输出，必须使用条件输出形式或者使用占位符的方式。
Trace >debug >info > error
说明：logger.debug("Processing trade with id: " + id + " symbol: " + symbol); 如果日志级别是 warn，上述日志不会打印，但是会执行字符串拼接操作，如果 symbol 是对象，会执行 toString()方法，浪费了系统资源，执行了上述操作，最终日志却没有打印。 
正例：（条件） 
if (logger.isDebugEnabled()) { 
logger.debug("Processing trade with id: " + id + " symbol: " + symbol); 
} 
正例：（占位符）// ★使用{}占位符。避免字符串连接操作，减少String对象（不可变）带来的内存开销
logger.debug("Processing trade with id: {} and symbol : {} ", id, symbol); 
【强制】异常信息应该包括两类信息：案发现场信息和异常堆栈信息。如果不处理，那么往上抛。 
正例：logger.error(各类参数或者对象 toString + "_" + e.getMessage(), e); 

关于生产环境的日志文件，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选 
  A .异常信息应该包括两类信息：案发现场信息和异常堆栈信息。
  B .日志文件推荐至少保存15天，因为有些异常具备以“周”为频次发生的特点。
  C .避免重复打印日志，浪费磁盘空间，务必在log4j.xml中设置additivity=false。
  D .错误日志和业务日志尽量分开存放。

关于应用中可以直接依赖的日志框架，下列哪些说法符合《阿里巴巴Java开发手册》：【BC】多选
A. Log4j。
B. SLF4J。
C. JCL(Jakarta Commons Logging)。
D. Logback。

关于日志级别的使用，下列哪些说法符合《阿里巴巴Java开发手册》；【BCD】多选
A. info日志尽可能多输出，方便开发人员排查问题。
B. 如果使用warn来记录刚上线时的业务行为信息，一定要注意日志输出量的问题，避免把服务器磁盘撑爆，并记得及时删除这些观察日志。
C. 生产环境禁止输出debug日志。
D. error级别只记录系统逻辑出错、异常或者重要的错误信息。

关于用日志记录异常信息，下列哪些说法符合《阿里巴巴Java开发手册》：【AB】多选
A. 日志尽量记录案发现场信息和异常堆栈信息
B. 如果日志中输出POJO类，POJO类需要重写toString方法，避免只输出hashCode。
C. 不建议输出任何日志，因为日志记录消耗性能。
D. 捕获异常后，一律抛给调用者去处理。

关于日志的打印，下列哪些符合《阿里巴巴Java开发手册》【D】单选
A. System.out("xxx"+e.getMessage())。
B. System.err("xxx"+e.getMessage())。
C. e.printStackTrace()。
D. logger.error("exception happens product info:"+product.toString()+"_"+e.getMessage())。

如何处理单元测试产生的数据，下列哪些说法是正确的？ 【ABC】多选
  A .测试数据入库时加特殊前缀标识。 
  B .测试数据使用独立的测试库。     
  C .自动回滚单元测试产生的脏数据。
  D .无须区别，统一在业务代码中进行判断和识别。

关于测试代码的覆盖率，下列哪些说法是正确的？【B】单选 
  A .路径覆盖是最强覆盖，符合路径覆盖且测试全部通过，程序绝对没有问题。
  B .语句覆盖度是最弱的覆盖度量方式。
  C .分支覆盖与条件覆盖其实是一回事。
  D .判定条件覆盖与路径覆盖其实是一回事。
注意：路径覆盖完全，也不能保证百分百不出错！

为了更方便地进行单元测试，被测试的业务代码应避免以下哪些情况？【ABCD】多选 
  A .构造方法中做的事情过多。
  B .存在过多的全局变量和静态方法。
  C .存在过多的外部依赖。
  D .存在过多的条件语句。

编写单元测试代码遵守BCDE原则，以保证被测试模块的交付质量，那么下列说法正确的是：【ABC】多选
A .Border，边界值测试，包括循环边界、特殊取值、特殊时间点、数据顺序等。
B .Correct，正确的输入，并得到预期的结果。
C .Design，与设计文档相结合，来编写单元测试。
D .Equal， 单元测试环境必须与线上生产环境一致。(Error)

单元测试代码写在Java工程的哪个地方最为合适？【C】单选
A.写在业务代码体里边，方便调试。
B.写在业务代码同一个包下，方便归类查找。
C.写在src/test/java目录下。
D.写在src/java目录下。

在《阿里巴巴Java开发手册》中， 提到不要对单元测试存在哪些误解？【ABCD】多选
A. 那是测试同学干的事情。
B. 单元测试代码码是多余的。
C. 单元测试代码不需要维护。
D. 单元测试互线上故障没有辩证关系。

根据《阿里巴巴Java开发手册》，以下功能必须进行水平权限控制校验的有【ABCD】多选
  A .订单详情页面。
  B .类目管理后台。
  C .店铺装修后台。
  D .订单付款页面。

关于参数有效性验证，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选 
  A .防止page size过大导致内存溢出。
  B .防止正则输入源串拒绝服务ReDOS。
  C .防止任意重定向。
  D .预防 SQL 注入。

关于系统安全，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】多选
A.表单、AJAX提交不需要进行CSRF安全过滤。
B.表单、AJAX提交必须执行CSRF安全过滤。
C.URL外部重定向传入的目标地址必须执行白名单过滤。
D.用户输入的SQL参数严格使用参数绑定或者METADATA字段值限定，防止SQL注入，禁止字符串拼接SQL访问数据库。

关于系统安全，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选
A. 非SEO URL必须配置为禁止爬虫访问。
B. 用户生成内容的场景，如发贴评论等，必须实现防刷
C. 使用平台资源，比如短信、邮件等功能，避免被滥刷资损，同时防止对用户造成骚扰。
D. 文本内容必须进行违禁词过滤。

=================（一）建表规约==================
根据《阿里巴巴Java开发手册》 ,数据库的表设计允许适当冗余,以提升SQL查询的性能,避免表的关联查询,下列哪些字段不允许几余：【CD】
A、文本类型的字段。
B、基本固定不变的类目名称。
C、 varchar(2500)的字段
D、需要频繁修改的字段
.【推荐】字段允许适当冗余，以提高性能，但是必须考虑数据同步的情况。冗余字段应遵循： 
1）不是频繁修改的字段。 
2）不是 varchar 超长字段，更不能是 text 字段。 
短连接：短连接操作步骤是：
连接-》数据传输-》关闭连接；
长连接：长时间保持客户端与服务端的连接状态。
连接-》数据传输-》保持连接-》数据传输-》保持连接-》…………-》关闭连接；
要求：长连接在没有数据通信时，定时发送数据包，以维持连接状态；短连接在没有数据传输时直接关闭就行了

关于表字段和索引，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .表字段注释，如果修改字段含义或对字段表示的状态追加时，需要及时更新。
  B .合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。
  C .针对表的每个字段都增加索引，加快查询速度。
  D .字段的区分度越高，索引的查找速度越快。
创建表的时候写注释
create table test1 (
field_name int comment ‘字段的注释’
)comment=‘表的注释’;
修改表的注释
alter table test1 comment ‘修改后的表的注释’;
修改字段的注释
alter table test1 modify column field_name int comment ‘修改后的字段注释’;

关于数据库命名规则，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】多选 
  A .数据库库名和表名没有规定，可任意取名，只要方便记忆即可。
  B .库名应该尽量与应用名称保持一致，表的命名最好是业务名称_表名的方式。
  C .无论是库名还是表名都禁用保留字，如desc、match、range等。
  D .表名、字段名必须使用小写字母或数字。

关于数据库是与否概念的列的命名方式，下列哪些说法符合《阿里巴巴Java开发手册》：【BD】多选 
  A .对于是与否概念的列名，必须使用can_abc 来表示。
  B .对于是与否概念的列名，必须使用is_abc 来表示。
  C .数据类型是varchar(1)（ Y表示是，N表示否）。
  D .数据类型是unsigned tiny int.（ 1表示是，0表示否）。

关于数据库中表相关的命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .表名、字段名禁止出现数字开头，禁止两个下划线中间只出现数字。
  B .表名不使用复数名词。
  C .表必备三字段命名：id, gmt_create, gmt_modify。
  D .表必备三字段命名：id, gmt_create, gmt_modified。

关于数据库索引的命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选
  A .主键索引(primary key)，字段类型为unsigned bigint、单表时推荐自增、步长为1。
  B .主键索引(primary key)，字段类型为unsigned bigint、单表时推荐自增、步长为2。
  C .唯一索引（unique key），命名规则为uk_字段名（如果多个字段继续下划线）。
  D .普通索引(normal index)，标记成idx_字段名（如果多个继续下划线）。

关于建表规约，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】多选
A. 字段为非负数，必须 定义为unsigned。
B. 存储的字符数几乎完全相等的字段，推荐定义为char类型存储。
C. varchar会预先分配存储空间
D. 不得使用级联与外链，一切外链概念必须在应用层解决。

=================（二）索引规约==================
利用索引进行排序,下列哪些说法是正确的:多选  【AB】 
A.查询语句 WHERE a = 10 ORDER BYb,可以利用素引(a，b)来进行索引排序。
B.查询语句WHERE a > 10 ORDER BY b,不可以利用素引(a，b)进行索引排序。
C.查询语句WHERE a IN (10, 11) ODER BY b.可以利用索引(a，b)来进行索引排序。
D.查询语句WHER a>10 AND b=20 ORDER BY a,可以利用索引(b，a)来进行素引排序。
解析：--where a in(...) order by b,c (对于排序来说，多个等于条件，也是范围查询)。又因为：比如索引中有范围查找，那么索引有序性无法利用。

关于索引的设计，下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选 
  A .对varchar类型的字段建立索引，必须指定索引长度。
  B .对varchar类型的字段建立索引，不需要指定索引长度，这样索引区分度最好。
  C .业务上具有唯一特性的字段（含组合字段），必须指定唯一索引。
  D .建复合索引时，一般选择区分度高的字段放在最左列。

关于索引的使用，下列哪些说法是正确的：【BCD】多选 
  A .查询语句 WHERE a+1 = 5 可以利用a索引。
  B .查询语句WHERE date_format(gmt_create, '%Y-%m-%d') = '2016-11-11'无法利用gmt_create索引。
  C .当 c 列类型为 char 时，查询语句 WHERE c = 5 无法利用c索引。
  D .索引字段使用时不能进行函数运算。

关于MySQL性能优化的描述，下列哪些说法是正确的：【ABCD】多选 
  A .主键查询优先于二级索引查询。
  B .表连接有一定的代价，故表连接数量越少越好。
  C .一般情况下，二级索引扫描优先于全表扫描。
  D .可以使用通过索引避免排序代价。
注意：这四条都要好好理解，对于索引优化都很有好处的。二级索引可以学习一下！

关于索引的设计和使用，下列哪些说法是正确的：【ABCD】多选
  A .若查询条件中不包含索引的最左列，则无法使用索引。
  B .对于范围查询，只能利用索引的最左列。
  C .对于order by A或group by A语句，在A上建立索引，可以避免排序。//易错
  D .对于多列排序，需要所有所有列排序方向一致，才能利用索引。
注意：组合索引有一个特性：做做前缀匹配，即(A,B,C)相当于(A),(A,B),(A,B,C)
索引使用规则：
若查询条件中不包含索引的最左列，无法使用索引
对于范围查询，只能利用索引的最左列
对于order by A语句或group by A语句，在A上建立索引，可以避免排序
对于多列排序，需要所有所有列排序方向一致，才能利用索引。

关于数据库模糊检索的描述下列哪些说法符合《阿里巴巴Java开发手册》：【ABD】多选 
  A .绝对禁止左模糊。
  B .绝对禁止全模糊。
  C .绝对禁止右模糊。
  D .全模糊或左模糊查询需求，优先使用搜索引擎。

关于组合索引，下列哪些说法符合《阿里巴巴Java开发手册》：【AC】多选
A.查询条件 where a='0' and b='1' , 当组合索引为(b,a)的时候能进行索引扫描。
B.查询条件 where  a='0' and b='1' ,当组合索引为(c,a,b)的时候进行索引扫描。
C.查询 select b from table where a='0',当组合索引为(a,b)的时候会进行索引扫描。
D.查询条件 where a > '0' order by b,当组合索引为(a,b)时会利用索引进行排序。

对于索引(a,b,c)，下列哪些说法是正确的【ABC】多选
A.查询语句 where a between 5 and 10 可以使用该索引
B.查询语句where a = 5 and b between 5 and 10 可以使用该索引.
C.查询语句 where a in(5,6,7,8,9)and b=5可以使用该索引。
D.查询语句 where b = 5 and c = 10 可以使用该索引。

关于使用explain对数据库性能进行优化分析，下列哪些说法符合《阿里巴巴Java开发手册》【A】单选
A.SQL性能优化的目标：至少要达到range级别，要求是ref级别，如果可以是consts最好。
B.index级别走的是扫描索引，所以管卡压我非常比ref快。
C.range级别是指对表进行范围索引。
D.ref级别是指使用主键或者唯一索引。

关于索引效率，下列哪些说法符合《阿里巴巴Java开发手册》：CD
A .使用索引的效率一定高于全表扫描的效率。
B .关于explain的结果，type=index的索引效率好于type=ref。
C .sql查询条件 where a like ‘%阿里%’ ，不会走索引。
D .sql查询条件 where a like ‘阿里%’ ,a列创建了索引，一般会使用索引进行检索。

关于join的描述，下列哪些说法符合《阿里巴巴Java开发手册》：【AB】多选
A.join的字段，数据类型须保持绝对一致。
B.join列必须有索引。
C.优先where过滤，其次再join关联。
D.只要满足业务需求和，join表的个数不受限制 。

对于索引的基本原理，下列哪些说法是正确的：【 ABCD】多选
A. 索引的数据结构主要有B-Tree、Hash、R-Tree、Full-Text等。
B. 从物理存储来看，主要分为聚集（clustered）和非聚集（non-clustered）索引。
C. MySQL的表是聚集索引组织表（index of table）。
D. 聚簇索引的叶子节点存放的是数据，非聚簇索引的叶子节点存放的是非聚集索引的key和主键值。

关于使用explain对数据库性能进行优化分析，下列哪些说法符合《阿里巴巴Java开发手册》：A
A .SQL性能优化的目标：至少要达到 range 级别，要求是ref级别，如果可以是consts最好。
B .index级别走的是扫描索引，所以速度会比ref快。
C .range级别是指对表进行范围索引。
D .ref级别是指使用主键或者唯一索引。 

关于explain执行计划，下列哪些说法是正确的【ABCD】多选
A. type列显示了连接使用了何种类型，从最好到最差的连接类型为：const，eq_ref,ref,range,index,ALL。
B. possible_keys显示可能在这张表中的索引，如果为空，表示没有可能的索引。
C. key列表示实际使用的索引。
D. ref列显示索引的哪一列被使用了。

=================（三）SQL语句==================
关于分页查询，下列哪些说法符合《阿里巴巴Java开发手册》：【ABC】多选
  A .分页查询，当统计的count为0时，应该直接返回，不要再执行分页查询语句。
  B .iBATIS自带的queryForList(String statementName,int start,int size)分页接口有性能隐患，不允许使用。
  C .定义明确的sql查询语句，通过传入参数start和size来实现分页逻辑。//易错
  D .可使用存储过程写分页逻辑，提高效率。

关于数据库中NULL的描述，下列哪些说法符合《阿里巴巴Java开发手册》：【BD】多选
  A .NULL=NULL的返回结果为true。
  B .NULL与任何值的比较结果都为NULL。
  C .NULL<>1的返回结果为true。
  D .当某一列的值全是NULL时，sum(col)的返回结果为NULL。
提示：count(col1,col2) 如果其中有一列为空则返回 0，那么count(col)也是一样的！

关于count相关的使用，下列哪些说法符合《阿里巴巴Java开发手册》：【ACD】多选
A、不要使用count(列名)或count(常量)来替代count(*)
B、count(列名)会统计值为NULL的行，而count(*)不会统计。
C、当某一列的值全是NULL时，count(列名)返回0。
D、在程序代码中写分页查询逻辑时，若count为0应直接返回，以免执行后面的分页语句。

关于数据库查询的描述，下列哪些说法符合《阿里巴巴Java开发手册》：【BCD】多选
A. 当需要获取数据表所有字段的值映射到DO时，可使用Select * 来查询。
B. 绝对禁止左模糊和全模糊查询；限制使用右模糊查询。全模糊或左模糊搜索的需求走搜索引擎实现。
C. 禁止使用存储过程来查询返回数据。
D. 在表查询中，需order by排序时，优先使用主键列，索引列。

=================（四）ORM映射==================
 
关于使用iBATIS操作数据，下列哪些说法符合《阿里巴巴Java开发手册》【CD】多选
A.如果表中字段和DO中的字段名完全一致，可直接用DO作为resultClass。
B.iBATIS中自带了queryForList(String statementName,int start,int size)的分页接口，可直接使用，无需再自行封闭。
C.不要定义大而全的数据更新接口，对整个DO进行更新。必须按需更新。
D.sqlmap中写update语句时，必须包含对记录中gmt_modified字段的更新。

关于ORM的规则，下列哪些说法符合《阿里巴巴Java开发手册》：AD
A .数据库中，表达是与否概念的字段，必须使用is_xxx的方式命名。
B .推荐使用iBATIS自带的queryForList(String statementName,int start,int size)进行分页查询。(不推荐)
C .为避免写resultMap，可以直接拿HashMap与HashTable作为查询结果集的输出。
D .不要用resultClass当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义。 

=================（一）应用分层==================

关于领域模型命名，下列哪些说法符合《阿里巴巴Java开发手册》：【ABC】多选
A.数据对象命名：xxxDO,xxx即为数据表名，例如：ResellerAccountDO。
B.数据传输对象：xxxDTO,xxx为业务领域相关的名称，例如ProductDTO。
C.展示层对象：xxxVO,xxx一般为网页名称，例如RecommendProductVO。
D.POJO是DO/DTO/BO/VO的统称，命名成xxxPOJO。

=================（二）二方库依赖==================

关于二方库版本号的命名方式，下列哪些说法符合《阿里巴巴Java开发手册》：【ABCD】 
  A .版本号命名格式：主版本号.次版本号.修订号。
  B .主版本号:产品方向改变，或者大规模API不兼容，或者架构不兼容升级。
  C .次版本号:保持相对兼容性，增加主要功能特性，影响范围极小的API不兼容修改。
  D .修订号:保持完全兼容性，修复BUG、新增次要功能特性等。

关于maven依赖、仲裁、规则，下列哪些说法是正确的：【ACD】多选 
  A .<dependencies>的依赖会默认传递给子项目。
  B .<dependencies>的依赖绝对不会传递给子项目。
  C .在<dependencyManagement>中指定版本号。
  D .避免在不同的子项目，声明同一个二方库的不同版本号。
注意：<dependencyManagement>，不会传给子项目。

关于二方库升级，下列哪些说法是正确的：【B】单选 
  A .升级二方库只是改个版本号，不需要关联功能的回归。
  B .升级二方库需要比对仲裁结果的差异，谨慎评估。
  C .升级二方库，绝对不会影响到其它二方库的版本号。
  D .只要此二方库负责人保证说不会有任何影响，即可大胆升级，直接发布上线。

关于二方库依赖的解析命令，下列哪些说法是正确的：【ABC】多选 
  A .mvn dependency:resolve 打印出已仲裁依赖的列表。
  B .mvn dependency:tree 打印工程整个的依赖树结构。
  C .mvn dependency:tree -Dverbose -Dincludes=commons-lang 打印出与commons-lang相关的详细依赖。
  D .mvn clean install 打印工程整个的依赖树结构，并部署到本地仓库中。

关于二方库使用枚举类型，下列哪些说法符合《阿里巴巴Java开发手册》【AB】多选
A. 二方库里可以定义枚举类型。
B. 二方库里接口的入参可以使用枚举类型。
C. 二方库里接口的返回值不能使用枚举类型，但可以包含枚举类型。
D. 二方库里接口的返回值是枚举类型或包含枚举类型时，当二方库的枚举值升级（增加枚举值）时，可能会导致接口调用时出现枚举对象序列化异常

关于二方库的依赖处理，下列哪些说法符合《阿里巴巴Java开发手册》：ACD
A .依赖于一个二方库群时，必须定义一个统一版本变量，避免各子二方库版本号不一致。
B .可以允许子项目的pom依赖中出现相同的GroupId，相同的ArtifactId，但是不同的Version。
C .所有pom文件中的依赖声明放在语句块中，所有版本仲裁放在语句块中。
D .线上应用不要依赖SNAPSHOT版本（安全包除外）。 

关于工具类二方库已经提供的，尽量不要在本应用中编程实现，下列哪些说法符合《阿里巴巴Java开发手册》：ABD
A .json操作使用fastjson。
B .md5操作使用commons-codec。
C .ArrayUtils、NumberUtils、DateFormatUtils、DateUtils等优先使用org.apache.commons.lang包。
D .CollectionUtils优先使用org.apache.commons.collections4包。

关于二方库的snapshot与release的区别，下列哪些说法是正确的(ABD)
A.snapshot在本地编译时，都会到中央库下载最新的二方库
B.release在本地编译时，如果已经存在相同的版本号，即使中央仓库有最新相同版本的二方库也不会拉取
C.应用使用了A的release版本的二方库，A依赖了B的snapshot二方库，应用本地编译时，并不会拉取B最新的snapshot的jar
D.应用发布尽量使用release版本的二方库，此举是为了保证发布的冥等性

关于二方库GroupID和ArtifactID格式，下列哪些说法符合《阿里巴巴Java开发手册》【AD】多选
A. GroupID格式为：com.{公司/子公司}.业务线{子业务线}。
B. GroupID格式为：com.{公司/子公司}.业务线.子业务线.子模块。
C. ArtifactID格式为：产品线名_模块名或者产品线.模块名。
D. ArtifactID格式为：产品线名-模块名。

=================（三）服务器==================

针对TCP协议，下列哪些说法是正确的：【CD】多选
A. tcp链接主动关闭的一方，在完成四次挥手协议后，即会立即关闭并释放socket。
B. 处于time_wait状态的socket，其实是已经关闭状态，当需要新建连接时，可以被马上复用。
C. 当大量socket处于time_wait状态时，会导致可用socket资源稀缺，从而导致服务器并发能力下降。
D. 通过修改/etc/sysctil.com配置文件，减小time_wait的超时时间，可以降低time_wait状态的socket数量，从而提升服务器并发能力。

关于应用与数据库之间的操作，下列哪些说法符合《阿里巴巴Java开发手册》：BC
A .对外提供一个大而全的接口进行POJO的update更新，这样比较省事，省代码。
B .使用事务回滚的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。
C .应用服务器与数据库之间是短连接。
D .应用服务器与数据库之间是长连接。 

关于客户数据展示，下列哪些说法符合《阿里巴巴Java开发手册》：ABCD
A .客户的密码，密钥及密保问题答案等信息禁止展示。
B .客户的银行卡号只显示后四位。
C .客户的证件号码只显示第一位和最后一位，在必要业务场景下，经多因子强验证后可完整展示。
D .涉及有完整展示客户信息的页面均需要接入防爬系统 